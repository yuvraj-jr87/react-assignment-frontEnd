{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YuvrajJR\\\\Desktop\\\\FSD\\\\Solved\\\\ibm-final-demos-may-2024\\\\03-ibm-frontend-react\\\\src\\\\components\\\\employee\\\\UpdateEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = () => {\n  _s();\n  const backendUrl = 'http://localhost:8081/emp/update-emp/';\n  const [selectedEmp, setSelectedEmp] = useState({});\n  const [errors, setErrors] = useState({});\n  const navigate = useNavigate();\n  const dataFromStore = useSelector(e => e.emp.empObj);\n  useEffect(() => {\n    setSelectedEmp(dataFromStore);\n  }, [dataFromStore]);\n  const handleChange = e => {\n    setSelectedEmp({\n      ...selectedEmp,\n      [e.target.name]: e.target.value\n    });\n    console.log(selectedEmp);\n    setErrors({\n      ...errors,\n      [e.target.name]: ''\n    });\n  };\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n    if (!selectedEmp.firstName.trim()) {\n      newErrors.firstName = \"First name is required\";\n      isValid = false;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(selectedEmp.email)) {\n      newErrors.email = \"Invalid email address\";\n      isValid = false;\n    }\n    if (selectedEmp.salary <= 0 || isNaN(selectedEmp.salary)) {\n      newErrors.salary = \"Salary must be a positive number\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (validateForm()) {\n      axios.put(backendUrl + selectedEmp.employeeId, selectedEmp).then(resp => {\n        alert(`${resp.data.firstName} updated successfully!`);\n        // setEmpData({ firstName: '', email: '', salary: '' });\n      }).catch(error => {\n        console.error(\"Error adding employee:\", error);\n      });\n    }\n  };\n  console.log(selectedEmp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"UpdateEmployee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstName\",\n        name: \"firstName\",\n        value: selectedEmp.firstName,\n        placeholder: \"Enter first name\",\n        required: true,\n        autoFocus: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: selectedEmp.email,\n        placeholder: \"Enter email\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: \"Salary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"salary\",\n        name: \"salary\",\n        value: selectedEmp.salary,\n        placeholder: \"Enter salary\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), errors.salary && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"error\",\n        children: errors.salary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateEmployee, \"/ag63GyjzwtrIKNGYSwzPVmIwbg=\", false, function () {\n  return [useNavigate, useSelector];\n});\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateEmployee","_s","backendUrl","selectedEmp","setSelectedEmp","errors","setErrors","navigate","dataFromStore","e","emp","empObj","handleChange","target","name","value","console","log","validateForm","isValid","newErrors","firstName","trim","test","email","salary","isNaN","handleSubmit","evt","preventDefault","put","employeeId","then","resp","alert","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","required","autoFocus","onChange","className","_c","$RefreshReg$"],"sources":["C:/Users/YuvrajJR/Desktop/FSD/Solved/ibm-final-demos-may-2024/03-ibm-frontend-react/src/components/employee/UpdateEmployee.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UpdateEmployee = () => {\r\n\r\n  const backendUrl = 'http://localhost:8081/emp/update-emp/';\r\n  const [selectedEmp,setSelectedEmp]=useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const navigate=useNavigate();\r\n\r\nconst dataFromStore = useSelector(e=>e.emp.empObj)\r\n\r\nuseEffect(()=>{\r\n\r\n  setSelectedEmp(dataFromStore)\r\n},[dataFromStore])\r\n\r\nconst handleChange = (e)=>{\r\n  setSelectedEmp({...selectedEmp,[e.target.name]:e.target.value})\r\n  console.log(selectedEmp);\r\n  setErrors({ ...errors, [e.target.name]: '' });\r\n}\r\n\r\nconst validateForm = () => {\r\n  let isValid = true;\r\n  const newErrors = {};\r\n\r\n  if (!selectedEmp.firstName.trim()) {\r\n      newErrors.firstName = \"First name is required\";\r\n      isValid = false;\r\n  }\r\n\r\n  if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(selectedEmp.email)) {\r\n      newErrors.email = \"Invalid email address\";\r\n      isValid = false;\r\n  }\r\n\r\n  if (selectedEmp.salary <= 0 || isNaN(selectedEmp.salary)) {\r\n      newErrors.salary = \"Salary must be a positive number\";\r\n      isValid = false;\r\n  }\r\n\r\n  setErrors(newErrors);\r\n  return isValid;\r\n};\r\n\r\nconst handleSubmit=(evt)=> {\r\n  evt.preventDefault();\r\n        if (validateForm()) {\r\n            axios.put(backendUrl+selectedEmp.employeeId, selectedEmp)\r\n                .then((resp) => {\r\n                    alert(`${resp.data.firstName} updated successfully!`);\r\n                    // setEmpData({ firstName: '', email: '', salary: '' });\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error adding employee:\", error);\r\n                });\r\n        }\r\n}\r\n\r\nconsole.log(selectedEmp)\r\n\r\n  return (\r\n    <>\r\n    <div>UpdateEmployee</div>\r\n    <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input type=\"text\" id=\"firstName\" name=\"firstName\" value={selectedEmp.firstName}   placeholder=\"Enter first name\" required autoFocus onChange={handleChange} />\r\n        {errors.firstName && <span className=\"error\">{errors.firstName}</span>}\r\n        <br />\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" value={selectedEmp.email}   placeholder=\"Enter email\" onChange={handleChange}/>\r\n        {errors.email && <span className=\"error\">{errors.email}</span>}\r\n        <br />\r\n        <label htmlFor=\"salary\">Salary:</label>\r\n        <input type=\"number\" id=\"salary\" name=\"salary\" value={selectedEmp.salary} placeholder=\"Enter salary\" onChange={handleChange}/>\r\n        {errors.salary && <span className=\"error\">{errors.salary}</span>}\r\n        <br />\r\n        <input type=\"submit\" value=\"Update Employee\"  />\r\n    </form>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default UpdateEmployee"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}