{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst empSlice = createSlice({\n  name: 'emp',\n  initialState: {\n    empObj: {},\n    empList: []\n  },\n  reducers: {\n    // more methods \n    setEmpObj: (state, action) => {\n      console.log(action.payload);\n      state.empObj = action.payload;\n    },\n    setEmpList: (state, action) => {\n      console.log(action.payload);\n      state.empList = action.payload;\n    }\n  }\n});\nexport default empSlice.reducer;\nexport const {\n  setEmpObj,\n  setEmpList\n} = empSlice.actions;","map":{"version":3,"names":["createSlice","empSlice","name","initialState","empObj","empList","reducers","setEmpObj","state","action","console","log","payload","setEmpList","reducer","actions"],"sources":["C:/Users/YuvrajJR/Desktop/FSD/Solved/ibm-final-demos-may-2024/03-ibm-frontend-react/src/redux/EmpSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst empSlice = createSlice({\r\n    name: 'emp',\r\n    initialState : { \r\n        empObj: {},\r\n        empList:[]  \r\n    },\r\n    reducers : { // more methods \r\n        setEmpObj : (state, action) => {\r\n            console.log(action.payload);\r\n            state.empObj = action.payload;\r\n        },\r\n        setEmpList : (state, action) => {\r\n            console.log(action.payload);\r\n            state.empList = action.payload;\r\n        },\r\n        \r\n    }\r\n});\r\nexport default empSlice.reducer;\r\n\r\nexport const {setEmpObj,setEmpList} = empSlice.actions;\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,QAAQ,GAAGD,WAAW,CAAC;EACzBE,IAAI,EAAE,KAAK;EACXC,YAAY,EAAG;IACXC,MAAM,EAAE,CAAC,CAAC;IACVC,OAAO,EAAC;EACZ,CAAC;EACDC,QAAQ,EAAG;IAAE;IACTC,SAAS,EAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACJ,MAAM,GAAGK,MAAM,CAACG,OAAO;IACjC,CAAC;IACDC,UAAU,EAAGA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACH,OAAO,GAAGI,MAAM,CAACG,OAAO;IAClC;EAEJ;AACJ,CAAC,CAAC;AACF,eAAeX,QAAQ,CAACa,OAAO;AAE/B,OAAO,MAAM;EAACP,SAAS;EAACM;AAAU,CAAC,GAAGZ,QAAQ,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}