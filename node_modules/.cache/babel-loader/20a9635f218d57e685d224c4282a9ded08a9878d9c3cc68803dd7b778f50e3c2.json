{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\YuvrajJR\\\\Desktop\\\\FSD\\\\Solved\\\\ibm-final-demos-may-2024\\\\03-ibm-frontend-react\\\\src\\\\components\\\\employee\\\\UpdateEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = () => {\n  _s();\n  const backendUrl = 'http://localhost:8081/emp/update-emp/';\n  const [selectedEmp, setSelectedEmp] = useState({});\n  const dataFromStore = useSelector(e => e.emp.empObj);\n  useEffect(() => {\n    setSelectedEmp(dataFromStore);\n  }, [dataFromStore]);\n  const handleChange = e => {\n    setSelectedEmp({\n      ...selectedEmp,\n      [e.target.name]: e.target.value\n    });\n    console.log(selectedEmp);\n  };\n  const validateForm = () => {\n    let isValid = true;\n    const newErrors = {};\n    if (!empData.firstName.trim()) {\n      newErrors.firstName = \"First name is required\";\n      isValid = false;\n    }\n    if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(empData.email)) {\n      newErrors.email = \"Invalid email address\";\n      isValid = false;\n    }\n    if (empData.salary <= 0 || isNaN(empData.salary)) {\n      newErrors.salary = \"Salary must be a positive number\";\n      isValid = false;\n    }\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (validateForm()) {\n      axios.put(backendUrl + selectedEmp._id, selectedEmp).then(resp => {\n        alert(`${resp.data.firstName} updated successfully!`);\n        // setEmpData({ firstName: '', email: '', salary: '' });\n      }).catch(error => {\n        console.error(\"Error adding employee:\", error);\n      });\n    }\n  };\n  console.log(selectedEmp);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"UpdateEmployee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"firstName\",\n        name: \"firstName\",\n        value: selectedEmp.firstName,\n        placeholder: \"Enter first name\",\n        required: true,\n        autoFocus: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        value: selectedEmp.email,\n        placeholder: \"Enter email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"salary\",\n        children: \"Salary:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"salary\",\n        name: \"salary\",\n        value: selectedEmp.salary,\n        placeholder: \"Enter salary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UpdateEmployee, \"86xYKIhIcT96lkXopucnRmqsxGo=\", false, function () {\n  return [useSelector];\n});\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateEmployee","_s","backendUrl","selectedEmp","setSelectedEmp","dataFromStore","e","emp","empObj","handleChange","target","name","value","console","log","validateForm","isValid","newErrors","empData","firstName","trim","test","email","salary","isNaN","setErrors","handleSubmit","evt","preventDefault","put","_id","then","resp","alert","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","required","autoFocus","onChange","_c","$RefreshReg$"],"sources":["C:/Users/YuvrajJR/Desktop/FSD/Solved/ibm-final-demos-may-2024/03-ibm-frontend-react/src/components/employee/UpdateEmployee.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios';\r\n\r\nconst UpdateEmployee = () => {\r\n\r\n  const backendUrl = 'http://localhost:8081/emp/update-emp/';\r\n  const [selectedEmp,setSelectedEmp]=useState({})\r\n\r\nconst dataFromStore = useSelector(e=>e.emp.empObj)\r\n\r\nuseEffect(()=>{\r\n\r\n  setSelectedEmp(dataFromStore)\r\n},[dataFromStore])\r\n\r\nconst handleChange = (e)=>{\r\n  setSelectedEmp({...selectedEmp,[e.target.name]:e.target.value})\r\n  console.log(selectedEmp)\r\n}\r\n\r\nconst validateForm = () => {\r\n  let isValid = true;\r\n  const newErrors = {};\r\n\r\n  if (!empData.firstName.trim()) {\r\n      newErrors.firstName = \"First name is required\";\r\n      isValid = false;\r\n  }\r\n\r\n  if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(empData.email)) {\r\n      newErrors.email = \"Invalid email address\";\r\n      isValid = false;\r\n  }\r\n\r\n  if (empData.salary <= 0 || isNaN(empData.salary)) {\r\n      newErrors.salary = \"Salary must be a positive number\";\r\n      isValid = false;\r\n  }\r\n\r\n  setErrors(newErrors);\r\n  return isValid;\r\n};\r\n\r\nconst handleSubmit=(evt)=> {\r\n  evt.preventDefault();\r\n        if (validateForm()) {\r\n            axios.put(backendUrl+selectedEmp._id, selectedEmp,)\r\n                .then((resp) => {\r\n                    alert(`${resp.data.firstName} updated successfully!`);\r\n                    // setEmpData({ firstName: '', email: '', salary: '' });\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error adding employee:\", error);\r\n                });\r\n        }\r\n}\r\n\r\nconsole.log(selectedEmp)\r\n\r\n  return (\r\n    <>\r\n    <div>UpdateEmployee</div>\r\n    <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"firstName\">First Name:</label>\r\n        <input type=\"text\" id=\"firstName\" name=\"firstName\" value={selectedEmp.firstName}   placeholder=\"Enter first name\" required autoFocus onChange={handleChange} />\r\n        {/* {errors.firstName && <span className=\"error\">{errors.firstName}</span>} */}\r\n        <br />\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" name=\"email\" value={selectedEmp.email}   placeholder=\"Enter email\" />\r\n        {/* {errors.email && <span className=\"error\">{errors.email}</span>} */}\r\n        <br />\r\n        <label htmlFor=\"salary\">Salary:</label>\r\n        <input type=\"number\" id=\"salary\" name=\"salary\" value={selectedEmp.salary} placeholder=\"Enter salary\" />\r\n        {/* {errors.salary && <span className=\"error\">{errors.salary}</span>} */}\r\n        <br />\r\n        <input type=\"submit\" value=\"Update Employee\"  />\r\n    </form>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default UpdateEmployee"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}