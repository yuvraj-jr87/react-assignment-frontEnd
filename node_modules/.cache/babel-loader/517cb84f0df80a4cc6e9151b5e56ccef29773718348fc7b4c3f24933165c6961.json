{"ast":null,"code":"// UserService.js\n\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:2000';\nconst UserService = {\n  registerUser: async userData => {\n    console.log(userData);\n    try {\n      const response = await axios.post(`${BASE_URL}/register`, userData);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      // return error;\n      throw new Error(error);\n    }\n  },\n  loginUser: async credentials => {\n    console.log(credentials);\n    try {\n      const response = await axios.post(`${BASE_URL}/login`, credentials);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  },\n  updateUserProfile: async (updatedData, token) => {\n    console.log(updatedData);\n    try {\n      const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n        headers: {\n          authorization: `Bearer ${token}`\n        }\n      });\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return error;\n    }\n  }\n};\nexport default UserService;\n\n// UserService.js\n\n// import axios from 'axios';\n\n// const BASE_URL = 'http://localhost:2000';\n\n// const UserService = {\n\n//     registerUser: (userData) => {\n//         console.log(userData);\n//         axios.post(`${BASE_URL}/register`, userData)\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     },\n\n//     loginUser: (credentials) => {\n//         console.log(credentials);\n//         axios.post(`${BASE_URL}/login`, credentials)\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     },\n\n//     updateUserProfile: async (updatedData, token) => {\n//         console.log(updatedData);\n//         axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\n//             headers: { authorization: `Bearer ${token}` }\n//         })\n//             .then((response) => {\n//                 console.log(response);\n//                 return response.data;\n//             })\n//             .catch((error) => {\n//                 console.log(error);\n//                 throw new Error(error);\n//             });\n//     }\n// };\n\n// export default UserService;","map":{"version":3,"names":["axios","BASE_URL","UserService","registerUser","userData","console","log","response","post","data","error","Error","loginUser","credentials","updateUserProfile","updatedData","token","put","_id","headers","authorization"],"sources":["C:/Users/YuvrajJR/Desktop/FSD/Solved/ibm-final-demos-may-2024/03-ibm-frontend-react/src/services/UserService.js"],"sourcesContent":["\r\n// UserService.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:2000';\r\n\r\nconst UserService = {\r\n\r\n    registerUser: async (userData) => {\r\n        console.log(userData);\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/register`, userData);\r\n            console.log(response);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            // return error;\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    loginUser: async (credentials) => {\r\n        console.log(credentials);\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}/login`, credentials);\r\n            console.log(response);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw new Error(error);\r\n        }\r\n    },\r\n\r\n    updateUserProfile: async (updatedData, token) => {\r\n        console.log(updatedData);\r\n        try {\r\n            const response = await axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\r\n                headers: { authorization: `Bearer ${token}` }\r\n            });\r\n            console.log(response.data);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return error;\r\n        }\r\n    }\r\n};\r\n\r\nexport default UserService;\r\n\r\n\r\n// UserService.js\r\n\r\n// import axios from 'axios';\r\n\r\n// const BASE_URL = 'http://localhost:2000';\r\n\r\n// const UserService = {\r\n\r\n//     registerUser: (userData) => {\r\n//         console.log(userData);\r\n//         axios.post(`${BASE_URL}/register`, userData)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     },\r\n\r\n//     loginUser: (credentials) => {\r\n//         console.log(credentials);\r\n//         axios.post(`${BASE_URL}/login`, credentials)\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     },\r\n\r\n//     updateUserProfile: async (updatedData, token) => {\r\n//         console.log(updatedData);\r\n//         axios.put(`${BASE_URL}/users/${updatedData._id}`, updatedData, {\r\n//             headers: { authorization: `Bearer ${token}` }\r\n//         })\r\n//             .then((response) => {\r\n//                 console.log(response);\r\n//                 return response.data;\r\n//             })\r\n//             .catch((error) => {\r\n//                 console.log(error);\r\n//                 throw new Error(error);\r\n//             });\r\n//     }\r\n// };\r\n\r\n// export default UserService;\r\n"],"mappings":"AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,MAAMC,WAAW,GAAG;EAEhBC,YAAY,EAAE,MAAOC,QAAQ,IAAK;IAC9BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,QAAS,WAAU,EAAEG,QAAQ,CAAC;MACnEC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClB;MACA,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDE,SAAS,EAAE,MAAOC,WAAW,IAAK;IAC9BR,OAAO,CAACC,GAAG,CAACO,WAAW,CAAC;IACxB,IAAI;MACA,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAE,GAAEP,QAAS,QAAO,EAAEY,WAAW,CAAC;MACnER,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;MACrB,OAAOA,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClB,MAAM,IAAIC,KAAK,CAACD,KAAK,CAAC;IAC1B;EACJ,CAAC;EAEDI,iBAAiB,EAAE,MAAAA,CAAOC,WAAW,EAAEC,KAAK,KAAK;IAC7CX,OAAO,CAACC,GAAG,CAACS,WAAW,CAAC;IACxB,IAAI;MACA,MAAMR,QAAQ,GAAG,MAAMP,KAAK,CAACiB,GAAG,CAAE,GAAEhB,QAAS,UAASc,WAAW,CAACG,GAAI,EAAC,EAAEH,WAAW,EAAE;QAClFI,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASJ,KAAM;QAAE;MAChD,CAAC,CAAC;MACFX,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;MAC1B,OAAOF,QAAQ,CAACE,IAAI;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZL,OAAO,CAACC,GAAG,CAACI,KAAK,CAAC;MAClB,OAAOA,KAAK;IAChB;EACJ;AACJ,CAAC;AAED,eAAeR,WAAW;;AAG1B;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}